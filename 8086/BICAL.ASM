	.MODEL SMALL
	.STACK 64
	.DATA

	MAXL1 DB 16
	ACTL1 DW 0000
	BNUM1 DB 16 DUP('$')

	MAXL2 DB 16
	ACTL2 DW 0000
	BNUM2 DB 16 DUP('$')

	FUNCTION DW 0000

	ACTLT DW 0000

	BRES DB 16 DUP(' '),0BAH,'$'
	ACTLR DW 0000

	NUM1 DW 0000
	NUM2 DW 0000
	RES DW 0000

	TOPROW EQU 10D
	BOTROW EQU 14D
	LEFCOL EQU 26D
	COL EQU 36D

	ROWT DB 10D
	COLT DB 26D

	TWO DW 02

	TEMP DW 0000

	XCOORD DW 00
	YCOORD DW 00

	SHADOW DB 12 DUP(0DBH)

	MENU DB 0C9H,10 DUP(0CDH),0BBH,'$'
		 DB 0BAH,10 DUP(00),0BAH,'$'
		 DB 0BAH, '   0   1  ',0BAH,'$'
		 DB 0BAH, '+ - * / = ',0BAH,'$'
		 DB 0C8H, 10 DUP(0CDH), 0BCH,'$'

	.CODE

MAIN PROC FAR

	MOV AX,@DATA
	MOV DS,AX
	
	CALL SCROLL; SCROLL SCREEN

	CALL DISPLAYMENU; TO DISPLAY MENU

	CALL MINITZ; INITIALIZE MOUSE

	CALL GETMLOC; GET MOUSE LOCATION

	;CALL INPUT
	CALL CONVERT

	MOV CX,FUNCTION
	MOV AX,NUM1
	
	CMP CX,27D
	JE ADDITION

	CMP CX,29D
	JE SUBTRACT

	CMP CX,31D
	JE MULTIPLY

	CMP CX,33D
	JE DIVIDE

	ADDITION:
	ADD AX,NUM2
	JMP EXIT   
	
	SUBTRACT:
	SUB AX,NUM2     
	JMP EXIT

	MULTIPLY:
	MUL NUM2
	JMP EXIT
	
	DIVIDE:
	MOV DX,0000 
	MOV BX,NUM2
	DIV BX
	JMP EXIT

	EXIT:
	MOV RES,AX
	CALL RCONVERT

	MOV COLT,37D; END OF LINE
	MOV ROWT,11D
	MOV AL,COLT
	MOV AH,00
	SUB AX,ACTLR
	MOV COLT,AL
	CALL SETCURSOR; SET CURSOR POSITION
	MOV AH,09H
	LEA DX,BRES
	ADD DX,16D
	SUB DX,ACTLR
	INT 21H

	MOV AH,4CH
	INT 21H

MAIN ENDP

INPUT PROC NEAR

	LEA DI,BNUM1
	
	INP1:
	MOV AH,01H
	INT 21H
	CMP AL,0DH
	JE INP2
	MOV [DI],AL
	INC DI
	INC ACTL1
	JMP INP1
	
	INP2:
	MOV AL,'$'
	MOV [DI],AL
	LEA DI,BNUM2

	INP3:
	MOV AH,01H
	INT 21H
	CMP AL,0DH
	JE INPEXIT
	MOV [DI],AL
	INC DI
	INC ACTL2
	JMP INP3

 INPEXIT:
	MOV AL,'$'
	MOV [DI],AL

	RET
INPUT ENDP

CONVERT PROC NEAR
	MOV DL,02
	MOV CX,ACTL1
	LEA DI,BNUM1
	ADD DI,ACTL1
	MOV AX,01
CON:
    DEC DI
	MOV BL,[DI]
	CMP BL,31H
	JNE CONVL
	ADD NUM1,AX
CONVL:
	MUL DL
	LOOP CON

	MOV CX,ACTL2
	LEA DI,BNUM2
	ADD DI,ACTL2
	MOV AX,01
CON1:
    DEC DI
	MOV BL,[DI]
	CMP BL,31H
	JNE CONVL1
	ADD NUM2,AX
CONVL1:
	MUL DL
	LOOP CON1

	RET

CONVERT ENDP

RCONVERT PROC NEAR
	
	MOV DX,0000
	MOV AX,RES
	LEA DI,BRES
	ADD DI,15D
RCON:
	DIV TWO
	ADD DL,30H
	MOV [DI],DL
	DEC DI
	MOV DL,00
	INC ACTLR
	CMP AX,0000
	JNE RCON

	;MOV AH,09H
	;MOV DX,DI
	;INT 21H

	;MOV CX,16
	;LEA DI,BRES
;CLEAR:
	;MOV AL,' '
	;MOV [DI],AL
	;LOOP CLEAR

	RET
RCONVERT ENDP

NEWLINE PROC NEAR
	MOV AH,02H
	MOV DL,0AH
	INT 21H
	RET
NEWLINE ENDP

MINITZ PROC NEAR

	MOV AX,00H
	INT 33H
	CMP AX,00H
	JE BYE
	MOV AX,01H
	INT 33H
	BYE:
	RET
MINITZ ENDP

GETMLOC PROC NEAR

	LEA SI,BNUM1
	MOV DI,SI
	MOV AL,11D; STARING ROW
	MOV ROWT,AL
	G10: 
	MOV COLT,37D; END OF LINE
	MOV AL,COLT
	MOV AH,00
	SUB AX,ACTLT
	MOV COLT,AL
	CALL SETCURSOR; SET CURSOR POSITION
	MOV AH,09H
	MOV DX,DI
	INT 21H
	MOV AX,06H
	INT 33H
	JMP DUMMY1
	DUMMY2:
	JMP G10
	DUMMY1:
	CMP BX,01H
	JNE G10; IF BUTTON IS NOT PRESSED LOOP
	SHR CX,1
	SHR CX,1
	SHR CX,1
	SHR DX,1
	SHR DX,1
	SHR DX,1
	CMP DX,12D;CHECK IF NO IS PRESSED
	JNE G20
	CMP CX,30D; CHECK IF 0 IS PRESSED
	JNE G30
	MOV AL,30H
	MOV [SI],AL
	INC SI
	INC ACTLT
	G30:
	CMP CX,34D; CHECK IF 1 IS PRESSED
	JNE G10
	MOV AL,31H
	MOV [SI],AL
	INC SI
	INC ACTLT
	JMP G10
	G20:
	CMP DX,13D
	JE G50
	JMP G10

	G50:
	CMP CX,35D
	JB G40
	JMP G60

G40:
	MOV FUNCTION,CX
	MOV AX,ACTLT
	MOV ACTL1,AX
	LEA SI,BNUM2
	MOV DI,SI
	MOV AX,0000
	MOV ACTLT,0000
	INC TEMP
	MOV AX,27D
	MOV COLT,AL
	CALL SETCURSOR
	MOV CX,10
	CLEAR1:MOV AH,02H; CLEAR SCREEN AFTER FIRST NO
	MOV DL,00
	INT 21H
	LOOP CLEAR1
	MOV AX,TEMP
	CMP AX,0002
	JNE DUMMY2

G60:
	MOV AX,ACTLT
	MOV ACTL2,AX
	CLEAR2:MOV AH,02H; CLEAR SCREEN AFTER SECOND NO
	MOV DL,00
	INT 21H
	LOOP CLEAR2
	RET
GETMLOC ENDP

SCROLL PROC NEAR
	MOV AX,0600H
	MOV BH,35H
	MOV CX,0000
	MOV DX,184FH
	INT 10H
RET
SCROLL ENDP

DISPLAYMENU PROC NEAR

	;MOV AX,1301H
	;MOV BX,0060H
	;LEA BP,SHADOW
	;MOV CX,12
	;MOV DH,TOPROW+1
	;MOV DL,LEFCOL+1
;D10:	INT 10H
;	INC DH
;	CMP DH,BOTROW+2
;	JNE D10
;	MOV BX,0071H
;	MOV AX,1300H
;	LEA BP,MENU
;	MOV CX,12
;	MOV DH,TOPROW
;	MOV DL,LEFCOL
;	MOV CX,12
;	D20:
;	INT 10H
;	CMP DH,BOTROW; CHECK FOR LAST ROW
;	JE D30
;	INC DH
;	ADD BP,12
;	MOV CX,12
;	JMP D20
;D30: RET
	MOV CX,05D
	LEA DX,MENU
	D40:
	PUSH DX
	MOV AH,09H
	CALL SETCURSOR
	INT 21H
	INC ROWT
	POP DX
	ADD DX,13D
	LOOP D40
	
RET
DISPLAYMENU ENDP

SETCURSOR PROC NEAR
	PUSH DX
	PUSH AX
	MOV AH,02H;FN FOR SETTING CURSOR
	MOV BH,00
	MOV DH,ROWT
	MOV DL,COLT
	INT 10H
	POP AX
	POP DX

RET

SETCURSOR ENDP
END MAIN