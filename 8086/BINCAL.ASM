	.MODEL SMALL
	.STACK 64
	.DATA

	DATA1 LABEL BYTE
	MAXL1 DB 20
	ACTL1 DB ?
	NUM1 DB 20 DUP(' ')

	DATA2 LABEL BYTE
	MAXL2 DB 20
	ACTL2 DB ?
	NUM2 DB 20 DUP(' ')

	RESA DB 20 DUP('0'),'$'
	TEMP DB 20 DUP('0'),'$'
	RESM DB 40 DUP('0'),'$'
	CTR DW 39D

	MSG1 DB 'ENTER 2 NUMBERS$'
	MSG2 DB '1.ADD 2.SUB 3.MULTIPLY $'

	.CODE

MAIN PROC FAR
	
	MOV AX,@DATA
	MOV DS,AX

	;M10: 
	LEA DX,MSG1
	CALL DISPLAY
	CALL INPUT
	CALL NEWLINE
	LEA DX,MSG2
	CALL DISPLAY
	CALL NEWLINE
	MOV AH,01H
	INT 21H
	PUSH AX
	CALL NEWLINE
	POP AX
	CMP AL,31H
	JZ M20
	CMP AL,32H
	JZ M30
	CMP AL,33H
	JZ M40
	JMP M50
	M20: CALL ADDITION
	JMP M50
	M30: ;CALL SUBTRACT
	JMP M50
	M40: CALL MULTIPLY
	JMP M50

	M50:
	MOV AH,4CH
	INT 21H

MAIN ENDP

DISPLAY PROC NEAR
	MOV AH,09H
	INT 21H
	RET
DISPLAY ENDP

INPUT PROC NEAR
	
	CALL NEWLINE
	MOV AH,0AH
	LEA DX,DATA1
	INT 21H
	MOV BH,00
	MOV BL,ACTL1
	MOV NUM1[BX],'$'
	CALL NEWLINE
	LEA DX,NUM1
	CALL DISPLAY
	CALL NEWLINE
	MOV AH,0AH
	LEA DX,DATA2
	INT 21H
	MOV BH,00
	MOV BL,ACTL2
	MOV NUM2[BX],'$'
	CALL NEWLINE
	LEA DX,NUM2
	CALL DISPLAY
	RET

INPUT ENDP

NEWLINE PROC NEAR
	MOV AH,02H
	MOV DL,0AH
	INT 21H
	RET
NEWLINE ENDP

ADDITION PROC NEAR

	MOV AL,ACTL1
	CMP AL,ACTL2
	JB A10
	MOV AL,ACTL2
	A10:
	MOV AH,00
	MOV CX,AX
	PUSH CX
	MOV SI,0000
	MOV DI,0000
	MOV AL,ACTL1
	MOV AH,00
	ADD SI,AX
	MOV AL,ACTL2
	MOV AH,00
	ADD DI,AX
	;DEC SI ;POINTS TO END OF NUM1
	;DEC DI ;POINTS TO END OF NUM2
	LEA BX,RESA;BX CONTAINS RESA
	ADD BX,20D

	MOV DL,00
	MOV [BX-1],DL
	POP CX
	MOV CH,00
	A20:
	DEC SI
	DEC DI
	DEC BX
	MOV AL,NUM1[SI]
	ADD AL,NUM2[DI]
	ADD AL,[BX]
	AAA
	ADD AL,30H
	CMP AL,32H
	JB A30
	SUB AL,02H
	MOV DL,01H
	MOV [BX-1],DL
	A30:
	MOV [BX],AL
	LOOP A20

	CMP SI,0000
	JZ A40
	MOV CX,SI
	A60:
	DEC SI
	DEC BX
	MOV AL,NUM1[SI]
	ADD AL,[BX]
	JB A50
	SUB AL,02H
	MOV DL,01H
	MOV [BX-1],DL
	A50:
	MOV [BX],AL
	LOOP A60
	JMP A70

	A40:
	CMP DI,0000
	JZ A70
	MOV CX,DI
	A80:
	DEC DI
	DEC BX
	MOV AL,NUM2[DI]
	ADD AL,[BX]
	JB A90
	SUB AL,02H
	MOV DL,01H
	MOV [BX-1],DL
	A90:
	MOV [BX],AL
	LOOP A80


	A70: 
	MOV AL,01
	CMP [BX-1],AL
	JA A100
	MOV AL,30H
	ADD [BX-1],AL
	DEC BX

	A100:
	MOV DX,BX
	CALL DISPLAY
	CALL NEWLINE
	RET

ADDITION ENDP

MULTIPLY PROC NEAR
	
	MOV CH,00
	MOV CL,ACTL2
	MOV DI,0000
	MOV SI,0000
	MOV BX,0000
	MOV AL,ACTL1
	MOV AH,00
	ADD SI,AX
	MOV AL,ACTL2
	MOV AH,00
	ADD DI,AX
	ADD BX,19D
	DEC SI
	DEC DI

	MUL10:
	PUSH DI
	PUSH CX
	PUSH SI
	PUSH BX
	MOV CL,ACTL1
	MUL20:
	MOV AL,NUM1[SI]
	SUB AL,30H
	MOV DL,NUM2[DI]
	SUB DL,30H
	MUL DL
	AAM
	ADD AL,TEMP[BX]
	CMP AL,32H
	JB MUL30
	SUB AL,02H
	MOV DL,31H
	MOV TEMP[BX-1],DL
	MUL30:
	MOV TEMP[BX],AL
	DEC SI
	DEC BX
	LOOP MUL20
	CALL ADDTORES
	CALL CLEARTEMP
	POP BX
	POP SI
	POP CX
	POP DI
	DEC DI
	LEA DX,RESM
	CALL DISPLAY
	CALL NEWLINE
	LOOP MUL10

	LEA DX,RESM
	CALL DISPLAY
	CALL NEWLINE


	RET
MULTIPLY ENDP

CLEARTEMP PROC NEAR

	MOV SI,0000
	MOV CX,20
	MOV AL,00
	C10:
	MOV TEMP[SI],'0'
	INC SI
	LOOP C10
	RET

CLEARTEMP ENDP

ADDTORES PROC NEAR

	MOV DI,	CTR
	MOV CH,00
	MOV CL,ACTL1
	INC CX
	MOV SI,19D

	ADD10:
	MOV AL,TEMP[SI]
	ADD AL,RESM[DI]
	SUB AL,30H
	CMP AL,32H
	JB ADD20
	SUB AL,02H
	MOV DL,01H
	ADD RESM[DI-1],DL
	ADD20:
	MOV RESM[DI],AL
	DEC DI
	DEC SI
	LOOP ADD10

	DEC CTR
	RET

ADDTORES ENDP

SUBTRACT PROC NEAR

	RET
SUBTRACT ENDP

END MAIN